name: CI and CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Docker
      run: docker-compose up --build -d
  
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install flake8 pytest-cov
      - name: Lint with flake8
        run: |
          flake8 --extend-ignore=E302,E101,E131,W191,W293,W292,W291,E201,E303,F401,E275,E305,E275,E701,E275,E701,F401,E251,E722,F401   --count --select=E9,F63,F7,F82 --exclude=*.pyc,*migrations* --show-source --statistics
          flake8 --extend-ignore=E302,E101,E131,W191,W293,W292,W291,E201,E303,F401,E275,E305,E275,E701,E275,E701,F401,E251,E722,F401  --count --max-complexity=10 --max-line-length=226 --exclude=*.pyc,*migrations* --statistics 
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test
        working-directory: ./tests
        run: |
          pip install pytest
          pytest --cov
        continue-on-error: true
        
  authomatization:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
        
    - name: Install dependencies 
      run: |
        sudo apt install doxygen
        pip install sphinx
        pip install sphinx-rtd-theme
        pip install breathe

        
    - name: Doxygen 
      run: doxygen dconfig
      continue-on-error: true

    - name: Sphinx
      working-directory: ./sphinxdocs
      run: make html

  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Update toml
      run: |
        version=$(date +%Y%m%d%H%M%S)
        sed -i "s/^version.*/version = \"$version\"/" pyproject.toml
      
    - name: Upgrade pip
      run: |
         pip install --upgrade pip
         pip install pytest --upgrade pytest
 
          
    - name: poetry install
      run: curl -sSL https://install.python-poetry.org | python3 - --git https://github.com/python-poetry/poetry.git@master

    - name: Config poetry
      run: poetry config http-basic.pypi ${{ secrets.PYPI_TOKEN_USERNAME }} ${{ secrets.PYPI_TOKEN_PASSWORD }}

    - name: Build and Publish
      run: |
        poetry build
        poetry publish
